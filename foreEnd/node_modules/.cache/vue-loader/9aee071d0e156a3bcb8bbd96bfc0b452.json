{"remainingRequest":"/Users/chengchuanxiang/3班程传翔/云商比赛/vue2-org-tree/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/chengchuanxiang/3班程传翔/云商比赛/vue2-org-tree/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/chengchuanxiang/3班程传翔/云商比赛/vue2-org-tree/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/chengchuanxiang/3班程传翔/云商比赛/vue2-org-tree/src/views/About.vue?vue&type=template&id=039c5b43&","dependencies":[{"path":"/Users/chengchuanxiang/3班程传翔/云商比赛/vue2-org-tree/src/views/About.vue","mtime":1623556009386},{"path":"/Users/chengchuanxiang/3班程传翔/云商比赛/vue2-org-tree/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengchuanxiang/3班程传翔/云商比赛/vue2-org-tree/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/chengchuanxiang/3班程传翔/云商比赛/vue2-org-tree/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chengchuanxiang/3班程传翔/云商比赛/vue2-org-tree/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}